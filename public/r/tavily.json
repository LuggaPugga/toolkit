{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tavily",
  "type": "registry:lib",
  "title": "Tavily",
  "description": "Search the internet and extract content from web pages",
  "dependencies": [
    "ai",
    "@tavily/core"
  ],
  "files": [
    {
      "path": "registry/search/tavily-tools.ts",
      "content": "import {\n\ttype TavilyExtractOptions,\n\ttype TavilySearchOptions,\n\ttavily,\n} from \"@tavily/core\";\nimport { tool } from \"ai\";\nimport z from \"zod\";\n\nexport const searchTool = (apiKey: string, options?: TavilySearchOptions) =>\n\ttool({\n\t\tname: \"search\",\n\t\tdescription: \"Search for the internet by a query\",\n\t\tinputSchema: z.object({\n\t\t\tquery: z.string(),\n\t\t}),\n\t\texecute: async ({ query }) => {\n\t\t\tconst tvly = tavily({ apiKey: apiKey });\n\t\t\tconst results = await tvly.search(query, options);\n\t\t\treturn results;\n\t\t},\n\t});\n\nexport const extractTool = (apiKey: string, options?: TavilyExtractOptions) =>\n\ttool({\n\t\tname: \"extract\",\n\t\tdescription: \"Extract the content from one or multiple web pages\",\n\t\tinputSchema: z.object({\n\t\t\turls: z.array(z.string()),\n\t\t}),\n\t\texecute: async ({ urls }) => {\n\t\t\tconst tvly = tavily({ apiKey: apiKey });\n\t\t\tconst results = await tvly.extract(urls, options);\n\t\t\treturn results;\n\t\t},\n\t});\n",
      "type": "registry:lib"
    }
  ]
}